@inherits ContextMenuBase
@namespace BlazorContextMenu

<div @attributes="@Attributes" 
     class="@($"{BaseClass} {ClassCalc} {DisplayClassCalc}")" id="@Id" style="@($"left:{X}px;top:{Y}px;z-index:{ZIndex};{(Direction == ContextMenuDirection.Left ? "" : "transform:translate(-100%)")}")" 
     data-autohide="@AutoHide.ToString().ToLower()" 
     data-autohideevent="@AutoHideEvent.ToString().ToLower()">
    @if (IsShowing)
    {
        <ul class="@ListClassCalc">
            <CascadingValue Value="(MenuTreeComponent)this" Name="ParentComponent">
                <CascadingValue Value="@(Template != null ? Template : CascadingTemplate)" Name="CascadingTemplate">
                    <CascadingValue Value="@(Animation.HasValue ? Animation.Value : CascadingAnimation)" Name="CascadingAnimation">
                        @{
                            var context = new MenuRenderingContext(Id, TargetId, X, Y, Trigger, Data);
                            @ChildContent(context)
                        }
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </ul>
    }
</div>


@code{
    [Parameter]
    public RenderFragment<MenuRenderingContext> ChildContent { get; set; }

    [Parameter]
    public ContextMenuDirection Direction { get; set; } = ContextMenuDirection.Left;

}
